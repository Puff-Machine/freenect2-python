# you can delete this line if you're not using Docker
image: python:latest

#include:
#  - template: Security/SAST.gitlab-ci.yml

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python3 -V  # Print out python version for debugging
  - python3 -m venv venv
  - source venv/bin/activate

build:
  stage: build
  script:
    - export "PKG_CONFIG_PATH=$CI_PROJECT_DIR/.local/lib/pkgconfig"
    - export "LD_LIBRARY_PATH=$CI_PROJECT_DIR/.local/lib"
    - apt-get update
    - apt-get -y install libusb-1.0-0-dev libjpeg-dev cmake g++ libturbojpeg0-dev
    - git clone --depth=1 https://github.com/OpenKinect/libfreenect2
    - cd libfreenect2
    - mkdir build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR/.local ..
    - make all install
    - cd ../..
    - pip install --upgrade pip setuptools wheel
    - pip install numpy sphinx sphinx-rtd-theme tox
    - tox
    - python3 setup.py sdist bdist_wheel
  artifacts:
    paths:
      - .tox/doc/build/doc
      - dist
    expire_in: 1 day

upload_package:
  stage: deploy
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - setup.py
  script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python3 -m twine upload --repository-url https://gitlab.hob-co.uk/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*.*

pages:
  stage: deploy
  script:
    - mkdir public
    - cp -rv .tox/doc/build/doc/* public/
  artifacts:
    paths:
      - public
